// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/javascript-node
{
	"name": "Wasm-IoT Orchestrator",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	//"image": "mcr.microsoft.csm/devcontainers/javascript-node:0-18"
	"dockerComposeFile": "../docker-compose.devcontainer.yml",
	"service": "orchestrator",
	// Could not seem to be able to select "profile" from compose-file to run
	// the orchestration-related services (server and db), so list them here.
	"runServices": ["orchestrator", "mongo"],
	"workspaceFolder": "/app",

	//"remoteUser": "vscode",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "bash .devcontainer/post-install.sh",

	// Configure tool-specific properties.
	// "customizations": {},

	"features": {
		// "ghcr.io/devcontainers/features/git:1": {},
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"dockerDashComposeVersion": "none"
		}
	},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "node",
	"customizations": {
		"vscode": {
			"settings": {
				"redhat.telemetry.enabled": false
			},
			"extensions": [
				"ms-azuretools.vscode-docker",
				"dtsvet.vscode-wasm",
				"GitHub.copilot",
				"42Crunch.vscode-openapi"
			]
		}
	}
}
